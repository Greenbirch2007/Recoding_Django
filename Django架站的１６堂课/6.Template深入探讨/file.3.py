# 　６．３　　Template语言


# 　 Template本身也有自己的语言和语法．{{id}}可以把变量的内容直接显示出来．如果是字典类型的变量，也可以使用{{id.field}}句点操作符把其中的字段
# 内容值显示出来．但是，如果遇到的是有很多内容的列表，或有些信息有数据才显示，没有数据就不显示，就需要更多语句应对了．
# 不过,Template语句用来处理简单的数据显示，如果太复杂的程序逻辑，应该是用views.py中的函数来处理

# ６．３．１　　判断指令

# 在Template中要取出变量的内容，直接使用{{id}}即可．如果id是一个字典类型的变量，就要使用句点操作符(例如{{ id.field}})取出在python中这类格式
# 的变量{'field1':10},那么，如果是列表形式呢？列表以索引值作为取出内容的索引(或下标)，如同之前取出字典变量内容一样，只是key值改为数字，如列表id=['item1','item2']
# 在template文件中，可以私用{{id.0}}和{{id.1}}将之取出


# 另外，在一般程序设计语言中常见的判断指令在template中也有，分别是：

# １．　　　{% if 条件　%}　．．．{% endif %}
# 2.    {% if 条件%}... {% elif 条件　%}...{% endif %}
# 3.   {% if 条件　%}．．．{% elif 条件%}... {% else %}...{% endif %}


# 请注意，endif和elif中间并没有空格
# 常见的if用法在于判断某一个变量是否有内容，如果有就显示；如果没有内容或没有传送此变量进来，就不予显示或显示其他信息，甚至可以让网页转向指定的网站或网页
# 当然也可以根据传进来的变量内容改变要显示的信息内容
# 在条件的表示式上，许多运算符(包括>,<,>=,<=,!=,==等)都可以使用，也可以使用and/for串接两个以上额条件，并使用not做否定条件．另外，若要检查某一个
# 元素有没有存在与另一个列表中，或某些字符有没有存在于另一个字符串里面，则可以使用"in" 和这个运算符　　例如
# 　　{% if car in cars %}...{% endif %}
# 或
# 　　{% if 'a' in 'abc' %}...{% endif %}


# 以6.2节的范例网站为例，假设想要提供一个可以根据当前系统时间来对浏览者显示早安或晚安的信息，只要把当前系统时间中的"小时"传到index.html网页中
# 然后通过if指令来判断即可，在views.py的index()中可以使用以下方法找出当前系统时间的"小时"数据
# 　hour = now.timetuple.tm_hour


# 接着在index.html中加入以下程序

# 此例，我们把它放在视频的嵌入码上方，因此在视频播放的上方可以根据当前的时间来决定要不要显示早安或晚安的信息，

# ６．３．２　　循环指令

# 如果在index.html中把菜单的内容直接写在网页中，日后如果需要增加更多直播台的内容，不止要在views.index中添加列表的呢日用，还要在index.html
# 网页中增加一次，不但麻烦，而且同样的数据在两个不同的地方进行修改也有可能造成不一样的你问题．解决此问题最好的方式就是直接把tv_list列表传送到
# index.html，然后使用Template的循环指令来解决．首先，假设我们又增加一个直播台，把views.index的内容修改如下


# 把上面的程序代码中有两个直播新闻台，其实tv_list并不会特别去传送，因为我们使用的locals()本来就会把所有局部变量传送过去，其实我们已经传送过去了
# 只是没有在index.html中取出来使用罢了

# 要解析在index.html章收到的列表变量，可以使用{% for %}和{% endfof %}.同样，end和for之间也没有空格


# 这一段程序代码用来取代固定的菜单格式．其中{% for t in tv_list %}就是使用t变量把列表的内容逐一取出，而t.name自然就可以把每一个列表中元素的
# 直播频道名称显示出来，成为菜单的每一个选项．而forloop.counter0是用来显示当前是第几个循环的一个计数器，刚好可以拿来放进url作为编网址用的参数
# 同样是循环计数器，forloop.counter0从0开始计数的，而forloop.counter是从１开始计数的．在这个例子中，由于列表的索引是从0开始的，因此我们选用forloop.counter0

#  通过循环指令的运用，我们的的直播新闻范例可以在不断修改index.html网页文件的情况下直接在tv_list列表中添加和修改内容，网页也会随之同步更新
# 再举一个二手车库存显示网页的例子．假设网站有以下资料要根据用户的选择显示在网页上

# 　其中，car_maker是车厂的名称列表，而car_list是按照car_maker中的顺序填入当前有库存的汽车型号，SAAB对应使用的是空字符串，表示当前在二手车商的
# 　数据中该品牌没有任何车款．在此范例的设计中，Template网页命名为carlist.html,而处理的函数为views.carlist,在urls.py 中的网址如下

# 　网址对应样式命名为"carlist-url"，在views.carlist函数中也是很简单地直接把所有数据都传送到carlist.html中进行网页显示，和之前的代码类似


# 在carlist.html中要处理的变量有车厂的列表car_maker,库存车款列表(二为列表或二维数组)car_list,目前选定的车厂编号maker以及车厂名称maker_name,
# 还有当前选定的车厂列表cars等．要特别注意的是，选定的车厂有可能并没有库存车款(例如SAAB,它在car_list中是一个空列表),我们在网页中要能够识别
# 这种情况，并在显示的时候以不同的信息呈现


# 如同前面的网站内容，在此使用{% for m in car_maker %}把所有车厂名称提取处理并建立一组链接，让用户可以童工这些链接存取各个车厂的提成款

# 其实{% for %}循环中除了cycle和forloop.counter0/forloop.counter，还有以下几个参数：

#  forloop.revcounter
#  forloop.revcounter0
#  forloop.first
#  forloop.last
#  forloop.parentloop


# 　前两者是反过来计算的计数值，最后一个forloop.parentloop是用来存取上一层循环的．forloop.first和forloop.last都是boolean值，
# 只有分别在循环处是第一圈和最后一圈的时候才是True，其他的时候是False．
# 这样做有什么用？
# 　以前面的网站程序为例，之前我们是在循环的外面使用if来判断cars中是否有数据，以此来决定要不要显示表格<table</table>标记以及第一行的标题栏
# 如果搭配forloop.first以及forloop.last，就可以把这个逻辑移回循环内

# 　如此在逻辑上就会比较好理解，变成一个完整的表格绘制工作

# ６．３．３　　　过滤器与其他语法标记

# 在显示数据时，Template解释器有许多内建的过滤器(Filter)可以使用，在此列举比较常用的

# 　想要使显示内容的表达更加人性化一些，还有一个模块是不能错过的，　那就是django.contrib.humanize,只是要先在settings.py中的INSTALLED_APP中
# 加入此模块，然后在Template文件中加上{% load humanize %}才可以使用．其中最主要的一个功能就是增加了intcomma过滤器，会将数字加上千分位显示

# 结合上述过滤器，我们简化以下二手车的数据项数，同时增加一个价格字段
# 　我们把这个网页叫做carprice,别忘了在urls.py中做相应额修正．因为此程序将会用到humanize模块，所以别忘了settings.py中进行修正．
# 　为了可以显示出正确的价格格式，在显示价格时使用了以下过滤器

# 其他内容基本上和carlist.html的内容差不多，显示出来的网页如下

# 其他几个比较常用的Template表示功能也一并在此介绍．我们之前在views.index中使用了datetime.now()函数取得系统当前的时间，然后传到index.html
# 中作为在网页上显示当前时间的依据，其实Template语言本身就提供了显示当前日期的功能(% now 格式字符串%)ｌ
# 例如，在网页中使用以下标记：
# 有时候在进行网页的版面设计时，可以使用{% lorem %}模板来产生一些无意义的字符串

# {% lorem [count] [method] [random] %}后面是３个参数，count是次数，method可以设置为w(表示文字)，p(表示段落),最后如果加上random,就会
# 以随机数的方式产生字符串．例如

#  其他标记以及特殊的语句会在以后谈到
